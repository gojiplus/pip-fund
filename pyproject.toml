## pyproject.toml for the pip‑fund package
## Build system configuration.  Setuptools is sufficient for this small
## command‑line utility.  See the Python Packaging User Guide for more
## details on the `[build-system]` table and specifying build
## dependencies.
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

## Project metadata.  The name should be unique on PyPI.  Update
## author information and the version as you iterate.
[project]
name = "pip-fund"
version = "0.1.0"
description = "Enumerate funding links for Python packages"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Gaurav Sood", email = "gsood07@gmail.com" }
]
maintainers = [
    { name = "Gaurav Sood", email = "gsood07@gmail.com" }
]
keywords = [
    "funding",
    "sponsorship", 
    "open-source",
    "packaging",
    "pypi",
    "donations",
    "npm-fund"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities"
]

[project.urls]
Homepage = "https://github.com/gojiplus/pip-fund"
Repository = "https://github.com/gojiplus/pip-fund.git"
Documentation = "https://github.com/gojiplus/pip-fund#readme"
"Bug Tracker" = "https://github.com/gojiplus/pip-fund/issues"
Funding = "https://github.com/sponsors/soodoku"

## Define a console script so that `pip install pip-fund` creates a
## `pip-fund` command.  The value points to the `main` function in
## `pip_fund/fund.py`.
[project.scripts]
pip-fund = "pip_fund.fund:main"

## Optional dependencies.  Installing with `pip install pip-fund[github]`
## will pull in PyGithub and PyYAML, enabling GitHub sponsor
## integration.
[project.optional-dependencies]
github = [
    "PyGithub>=1.59",
    "PyYAML>=6.0"
]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0"
]

## Tool-specific configuration
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]